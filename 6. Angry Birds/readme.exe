Author: Javier Alcalde Marchena
javieralcaldemarchena3a@gmail.com

This project is the submission for Angry Birds, project 6 of HarvardX: CS50's Introduction to Game Development.
The original files were provided by the edX platform (see game files for more information).
Initially the project consisted of a single level of a game similar to Angry Birds, in which you have to throw an entity against structures to break them and hit the units inside.
In this starting version, the player could throw a round alien against a wooden structure (two vertical logs that support one horizontal log) with a square alien inside.


Functionalities added as per requirements of the course:

- Once per throw, when the player presses space the alien is split into 3 aliens:
  - The new aliens share behavior with the original (physics, movement, appearance...).
  - All aliens must meet the conditions for victory or throw restart to proceed accordingly.
  - It was decided that the new aliens should be smaller than the original (to balance the extra bodies with less mass).


Additional functionalities added and other changes:

- Using the provided spreadsheets, new obstacles have been added to the game:
  - Horizontal and vertical fat panels, triangle, square and circle added to the previous shapes (horizontal and vertical slim panels).
  - Glass, stone, metal and explosive added to the previous materials (wood).
    - Different sounds for each material are added.
  - To take into account the different physical qualities of the materials, the damage system has been reworked to use the impact of the collision instead of the speed.
    - Each obstacle has 3 HP, and when it receives an impact superior to the obstacle threshold it loses HP and its sprite changes to reflect that.
    - Each material has its own density that affects the impact of the collision and the proportion of damage that receives (a more fragile material absorbs more damage from the collision).
  - When destroyed, the explosive obstacles cause an explosion that pushes (but not damages) the surrounding obstacles.
    - The strength of an explosion is proportional to the density of the object, and the range is proportional to its size.
    - Now the round alien creates a small explosion when is split. This explosion can push obstacles and the smaller aliens.

- A system for procedurally generating levels is implemented:
  - The player starts at level 1 and progresses each time it kills all the squared aliens. The player wins the game upon reaching level 20.
  - The difficulty of the level is (approximately) proportional to the number of the level (up to a limit).
    - This difficulty determines the quantity and materials of predefined 'boxes' that spawn.
    - These boxes can spawn in the ground (no more than 3 boxes from the starting position) and over 1 or 2 existing boxes (no higher than at 'third floor').
    - Additional objects are added to both sides of the obstacle course and in each available box roof to create additional variation.
  - When an squared alien dies or an obstacle is broken, the player increases its score. The score is passed between levels.
    - The score used as a reward for destroying an obstacle is calculated using its material and general size. All square aliens are worth 2000 points.
    - Each destroyed obstacle briefly shows the points it rewards in its position.
    - A different sound plays depending of the score increment.
  
 - A progression system to increase the destructive capabilities of the alien with the levels is implemented:
  - At the end of the level the player can choose 1 of 3 upgrades. This will improve some functionality for the alien.
    - The upgrades are chosen at random from a pool of 10 different upgrades, but only if they are not at their maximum level yet.
  - To introduce extra progression possibilities, the alien itself has been replaced with obstacles of diverse properties, starting with normal wood.
    - When a material is upgraded once gets framed with the next material, and its full body is replaced after the second upgrade.
    - The alien's face is conserved for cosmetic purposes.
  - There is a fixed number of projectiles to throw. If any square alien is alive when all projectiles have been used the player loses the game. This number restarts with each level.
    - Each unused projectile rewards extra points when the level is completed.
  
- Changes for victory, throw restart and game over conditions:
  - Also triggers if all the projectiles are outside the screen or if all aliens have died, regardless of projectile speed (to avoid long unnecessary waiting until the next throw).
  - If any obstacle is moving, it prevents the end of the throw (aliens may die from collisions with them, and their destruction can still give points).
  - The projectiles must be on the ground (to prevent triggers when throwing the alien directly upward or if slowly moving over obstacles).
  - If the projectiles are completely still over obstacles, the end of the throw triggers independent of other conditions (to stop projectiles from getting stuck over structures).

- Camera changes:
  - Every element of the game has been upscaled 3x to fix visual distortions due to the low resolution.
  - The camera has been zoomed out to allow seeing the whole level in the later stages of the game.
  - After the throw, the camera follows the projectile until it displays the generated level in the center, and then stops.
  
- Other changes:
  - The starting message is changed to inform the player of the objective of the game.
  - After each level, a random tip that provides information about the game is shown to the player. The same tip cannot be shown 2 times in the same run.
  - The starting angle of the projectile changes with throw direction and with the trajectory before hitting something.
    - The projectiles created during the division appear in the direction the projectile is facing.
  - The maximum throw force stays constant regardless of the throw angle (due to throw force calculations tilted throws were stronger than horizontal throws).
  - Minor bugfixes (window resize was not working correctly).

A demonstration of the game can be seen here: https://youtu.be/jctnUlCrcCo

Some of the new sounds added have been created with Bfxr (https://www.bfxr.net/). Others have been downloaded from https://mixkit.co/free-sound-effects/.
The victory fanfare sounds have been composed using FL studio (trial version).
The game icon has been created with GIMP (https://www.gimp.org/).
